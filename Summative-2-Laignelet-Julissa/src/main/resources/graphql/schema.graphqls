type Publisher {
    id: ID!
    name: String!
    street: String!
    city: String!
    state: String!
    postalCode: String!
    phone: String!
    email: String!
    books: [Book]
}

type Author {
    id: ID!
    firstName: String!
    lastName: String!
    street: String!
    city: String!
    state: String!
    postalCode: String!
    phone: String!
    email: String!
    books: [Book]
}

type Book {
    id: ID!
    isbn: String!
    publishDate: String!
    author: Author!
    title: String!
    publisher: Publisher
    price: Float!
}

type Query {
    findBookById(id:ID!): Book
    findBooksByAuthorId(authorId: ID!):[Book]
    findAuthorById(id:ID!): Author
    findPublisherById(id:ID!): Publisher
}

type Mutation {
    addAuthor(id: ID!, firstName: String!, lastName: String!, street: String!, city: String!, state: String!, postalCode: String!, phone: String!, email: String!): Author
    updateAuthor(id: ID!, firstName: String!, lastName: String!, street: String!, city: String!, state: String!, postalCode: String!, phone: String!, email: String!): Author
    addBook(id: ID!, isbn: String!, publishDate: String!, authorId: ID, title: String!, publisherId: ID, price: Float!): Book
    updateBook(id: ID!, isbn: String!, publishDate: String!, authorId: ID, title: String!, publisherId: ID, price: Float!): Book
    addPublisher(id: ID!, firstName: String!, lastName: String!, street: String!, city: String!, state: String!, postalCode: String!, phone: String!, email: String!): Publisher
    updatePublisher(id: ID!, firstName: String!, lastName: String!, street: String!, city: String!, state: String!, postalCode: String!, phone: String!, email: String!): Publisher
    deleteAuthorById(id: ID!): Boolean
    deleteBookById(id: ID!): Boolean
    deletePublisherById(id: ID!): Boolean
}


#Get a publisher by id.
#Including books for the publisher and authors for the books.
#Get an author by id.
#Including books by the author.
#Get a book by id.
#Including the author and publisher of the book.
