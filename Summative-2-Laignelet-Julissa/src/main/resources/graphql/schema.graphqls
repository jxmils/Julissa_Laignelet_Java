type Publisher {
  id: ID!
  name: String!
  street: String!
  city: String!
  state: String!
  postalCode: String!
  phone: String!
  email: String!
}

type Author {
  id: ID!
  firstName: String!
  lastName: String!
  street: String!
  city: String!
  state: String!
  postalCode: String!
  phone: String!
  email: String!
}

type Book {
  id: ID!
  isbn: String!
  publishDate: String!
  author: Author!
  title: String!
  publisher: Publisher
  price: Int!
}

type Query {
  findPublisherById(id:ID!): Publisher
  findAuthorById(id:ID!): Author
  findBookById(id:ID!): Book
}

type Mutation {
    addAuthor(id: ID!, firstName: String!, lastName: String!, street: String!, city: String!, state: String!, postalCode: String!, phone: String!, email: String!): Author
    updateAuthor(id: ID!, firstName: String!, lastName: String!, street: String!, city: String!, state: String!, postalCode: String!, phone: String!, email: String!): Author
    addBook(id: ID!, isbn: String!, publishDate: String!, authorId: ID, title: String!, publisherId: ID, price: Int!): Book
    updateBook(id: ID!, isbn: String!, publishDate: String!, authorId: ID, title: String!, publisherId: ID, price: Int!): Book
    addPublisher(id: ID!, firstName: String!, lastName: String!, street: String!, city: String!, state: String!, postalCode: String!, phone: String!, email: String!): Publisher
    updatePublisher(id: ID!, firstName: String!, lastName: String!, street: String!, city: String!, state: String!, postalCode: String!, phone: String!, email: String!): Publisher
    deleteAuthor(id: ID!): Boolean
    deleteBook(id: ID!): Boolean
    deletePublisher(id: ID!): Boolean
}


#Get a publisher by id.
#Including books for the publisher and authors for the books.
#Get an author by id.
#Including books by the author.
#Get a book by id.
#Including the author and publisher of the book.